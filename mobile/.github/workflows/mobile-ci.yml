name: Mobile App CI/CD

on:
  push:
    branches: [main, develop]
    paths: ['mobile/**']
  pull_request:
    branches: [main, develop]
    paths: ['mobile/**']

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json
    
    - name: Install dependencies
      run: |
        cd mobile
        npm ci
    
    - name: Run TypeScript check
      run: |
        cd mobile
        npx tsc --noEmit
    
    - name: Run linting
      run: |
        cd mobile
        npm run lint
    
    - name: Run tests
      run: |
        cd mobile
        npm test -- --coverage --watchAll=false

  build-preview:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Install dependencies
      run: |
        cd mobile
        npm ci
    
    - name: Build preview (iOS)
      run: |
        cd mobile
        eas build --profile preview --platform ios --non-interactive --wait
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    
    - name: Build preview (Android)
      run: |
        cd mobile
        eas build --profile preview --platform android --non-interactive --wait
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  build-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Install dependencies
      run: |
        cd mobile
        npm ci
    
    - name: Build production (iOS)
      run: |
        cd mobile
        eas build --profile production --platform ios --non-interactive --wait
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    
    - name: Build production (Android)
      run: |
        cd mobile
        eas build --profile production --platform android --non-interactive --wait
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    
    - name: Submit to App Stores (Production only)
      if: github.ref == 'refs/heads/main' && startsWith(github.ref, 'refs/tags/')
      run: |
        cd mobile
        eas submit --profile production --platform all --non-interactive
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  update-over-the-air:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json
    
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Install dependencies
      run: |
        cd mobile
        npm ci
    
    - name: Publish update
      run: |
        cd mobile
        eas update --branch production --message "Automated update: ${{ github.event.head_commit.message }}"
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}